# Runtime code to infer version infos
# from ``_version`` module generated by versioneer.
from __future__ import absolute_import, print_function, division

from ._version import get_versions

major = None
minor = None
patch = None
suffix = None
fullversion = None


def _extract_version():
    global major, minor, patch, suffix, fullversion
    version_info = get_versions()
    fullversion = version_info['version']
    version_error = version_info['error']
    if version_error is not None:
        raise ImportError('Unable to get pygpu version')
    version_pieces = fullversion.split('.', 2)
    if len(version_pieces) != 3:
        raise ImportError('Unable to parse pygpu version string')
    version_patch_pieces = version_pieces[2].split('+', 1)
    if len(version_patch_pieces) not in (1, 2):
        raise ImportError('Unable to parse pygpu version patch')
    major = int(version_pieces[0])
    minor = int(version_pieces[1])
    patch = int(version_patch_pieces[0])
    suffix = ''
    if len(version_patch_pieces) == 2:
        suffix = '+' + version_patch_pieces[1]

_extract_version()
del get_versions
del _extract_version
